<!-- HOW THIS WORKS:
1.  Search for a property in the allData autocomplete field
2.  In ptl.js, $("#allData").autocomplete detects the search term, and sends it to
3.  s.php which runs the cURL statement based on the search term, and returns json_encode array of APTS data
4.  the json_encoded array becomes the source of the autocomplete
5.  When selection is made in the autocomplete, this populates the tax lookup search parameter inputs
6.  User then fine-tunes the 4 data parameters, ie. the CUSTOMER_NUMBER, last digit, etc
7.  Lookup input is class: submit, which then POSTs the 4 data parameters (POST = method) to
8.  /toronto/tax which is a function in app.php:    $app->post('/toronto/tax', function () use ($app) {
9.  This returns the cURL result which needs to be json_decoded, and this cURL result is rendered by the twig:  return $twig->render('http.html.twig', ['curl_result' => json_decode($result,true)]);
10.  this reloads the page with a curl_result which is now displayed-->


# HTTP Requests & Google App Engine

This sample application demonstrates how to make [HTTP Requests with Google App Engine](https://cloud.google.com/appengine/docs/php/outbound-requests).

## Setup

- Install [`composer`](https://getcomposer.org)
- Install dependencies by running:

```sh
composer install
```

- Install the [Google Cloud SDK](https://developers.google.com/cloud/sdk/).

## Deploy to App Engine

**Run Locally**

Run the sample with [`dev_appserver.py`](https://cloud.google.com/appengine/docs/php/tools/using-local-server):

```
cd /path/to/php-docs-samples/appengine/standard/http
dev_appserver.py .
```

Now browse to `http://localhost:8080` to view the sample.

**Deploy with gcloud**

```
gcloud config set project YOUR_PROJECT_ID
gcloud app deploy
gcloud app browse
```

The last command will open `https://{YOUR_PROJECT_ID}.appspot.com/`
in your browser.

## Using the App

This app shows you how to make http requests in Google App Engine. To use cURL,
modify the `php.ini` file in the root of this project and uncomment one of the
valid cURL extensions. [Read our documentation] to understand the difference
between using cURL and cURLite.

{% if curl_result is defined %}
<table>
  <tr>
    <td style="vertical-align: top;">

        <input id="reset2" type="button" value="Reset"  action="" class="submit">
        <pre id="curl_display">{{ curl_result|json_encode(constant('JSON_PRETTY_PRINT')) }}</pre>

    </td>
    <td style="vertical-align: top;">

    </td>
  </tr>
</table>
{% endif %}
{% set curl_result = null %}


///THIS IS THE LINE THAT PICKS THE testData
//var d2 = testData3; //temp switch bc d2 has all queries done

                  //{{ curl_result|json_encode(constant('JSON_PRETTY_PRINT')) }}

                  ///////////////////////////// ACCOUNT DETAILS  ///////////////////////////////////////////////////////////
                  //var Type  = search(d2, 'ServiceAccount[].Type');
                  //console.log("Typexxx: ".concat(Type));
                  //var ROLL_NUMBER  = search(d2, 'ServiceAccount[].ID[].body');
                  //console.log("ROLL_NUMBERxxx: ".concat(ROLL_NUMBER));


console.log("Hi Dan2".concat({{ curl_result|json_encode(constant('JSON_PRETTY_PRINT')) }}));


      <!-- <script> $.getScript("/js/testCode.js" )</script> -->


      https://weblog.west-wind.com/posts/2011/May/21/Web-Browser-Control-Specifying-the-IE-Version#Using-the-X--UA--Compatible-HTML-Meta-Tag


//console.log("dan test: " + (foo));

$(document).ready(function () {
    // var iLookAboutURL  = "https://propertytaxservices.com/images/aa.jpg" ;
    // var iLookAboutURL2 = "https://mpac.ilookabout.com/thumbnail/?size=1024&Arn=190410169000300"  ;

    // var iLookAboutURL  = "https://mpac.ilookabout.com/thumbnail/?size=1024&Arn=" + roll_num.substring(0,15) ;
    // var iLookAboutURL2 = "https://propertytaxservices.com/images/amp.jpeg" ;
    // console.log("iLookAboutURL: " + (iLookAboutURL));           
    // // $("#ilookimage").attr("src", iLookAboutURL);
    // $('#ilookimage').on({
    //     'click': function() {
    //          var src = ($(this).attr("src") === iLookAboutURL)
    //             ? iLookAboutURL2
    //             : iLookAboutURL;
    //          $(this).attr("src", src);
    //     }
    // });

    // var iLookAboutURL3  = "http://placehold.it/500x500" ;
    // var iLookAboutURL4 = "http://placehold.it/300x300" ;
    // $("#ilookimage2").attr("src", iLookAboutURL3);
    // $('#ilookimage2').on({
    //     'click': function() {
    //          var src = ($(this).attr("src") === iLookAboutURL3)
    //             ? iLookAboutURL4
    //             : iLookAboutURL3;
    //          $(this).attr("src", src);
    //          $(this).attr("border", 2);
    //     }
    // });

    // var img = $("<img />").attr('src', 'https://mpac.ilookabout.com/thumbnail/?size=1024&Arn=190410169000300')
    // .on('load', function() {
    //     if (!this.complete || typeof this.naturalWidth == "undefined" || this.naturalWidth == 0) {
    //         alert('broken image!');
    //     } else {
    //         alert('ok image!');
    //         alert(img);
    //         $("#ilookimage").append(img);
    //     }
    // });


});